name: Sync Fork
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'tag list'
        type: string
        required: false
        default: ''
  schedule:
    - cron: '2 */12 * * *'
permissions:
  contents: write
jobs:
  synchronize-upstream:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git remote add upstream https://github.com/gethomepage/homepage.git && git fetch upstream --tags --force
      - run: git checkout merge_upstream || git checkout -b merge_upstream main
      - name: Fetch Upstream Tags
        id: fetch-upstream-tags
        if:  ${{ !inputs.tags }}
        run: |
          fmt='r=%(refname)
          echo ${r#refs/tags/}'
          echo 'NEW_TAGS<<EOF' >> $GITHUB_OUTPUT
          EXPR=$(git for-each-ref --format="$fmt" --no-merge merge_upstream refs/tags)
          eval "$EXPR" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Set Identity
        run: |
          git config user.name "Github Action"
          git config user.email "bot@github-actions"
      - name: Create Tags
        if: ${{inputs.tags || steps.fetch-upstream-tags.outputs.NEW_TAGS}}
        run: |
          for TAG in ${NEW_TAGS}; do
            git checkout -b release/${TAG} ${TAG}
            git rev-list --reverse merge_upstream ^upstream/main | git cherry-pick --stdin
            git tag -d ${TAG}
            git tag ${TAG} release/${TAG}
          done
          for TAG in ${NEW_TAGS}; do git push -u origin release/${TAG}; done
        env:
          NEW_TAGS: ${{inputs.tags || steps.fetch-upstream-tags.outputs.NEW_TAGS}}
      - name: Push Tags
        if: ${{inputs.tags || steps.fetch-upstream-tags.outputs.NEW_TAGS}}
        run: |
          for TAG in ${NEW_TAGS}; do
            git push origin ${TAG}
          done
        env:
          GH_TOKEN: ${{secrets.HOMEPAGE_TOKEN}}
      - name: Pull Upstream Changes
        id: fetch-upstream-changes
        run: |
          git merge origin/main
          if [ "$(git rev-parse main)" != "$(git rev-parse merge_upstream)" ]; then
            git push -u origin merge_upstream
            echo "CHANGES=true" >> $GITHUB_OUTPUT
          else
            echo "CHANGES=false" >> $GITHUB_OUTPUT
          fi
      - name: Create Upstream PR
        if: ${{steps.fetch-upstream-changes.outputs.CHANGES == 'true'}}
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pulls = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: 'merge_upstream',
              base: 'main',
              state: 'open',
            });

            if (pulls.data.length < 1) {
              await github.rest.pulls.create({
                title: '[CI] Merge upstream into main',
                owner: owner,
                repo: repo,
                head: 'merge_upstream',
                base: 'main',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script)',
                ].join('\n'),
              });
            } else {
              const existingPR = pulls.data[0];
              await github.rest.pulls.update({
                owner: owner,
                repo: repo,
                pull_number: existingPR.number,
                body: [
                  existingPR.body,
                  `Updated by Job ${context.job}`,
                ].join('\n'),
              });
            }
    env:
      GH_TOKEN: ${{ github.token }}
